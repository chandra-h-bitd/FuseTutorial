config:proplist --pid org.apache.karaf.management



Important Undertow related KCS articles and Documents : 

- Configuring idle connection timeout for Undertow in EAP 7 : https://access.redhat.com/solutions/3163281
- How to set web connector timeout (connectionTimeout) in EAP 6 : https://access.redhat.com/solutions/456733
- Configure Undertow as load balancer for different application context : https://access.redhat.com/solutions/3297831
- How to create an Undertow Handler in JBoss EAP 7 : https://access.redhat.com/solutions/2447161
- How to remove or disable the default http Undertow listener on EAP 7 : https://access.redhat.com/solutions/3039851
- Undertow loadbalancing capabilities : https://access.redhat.com/solutions/2213351
- Configuring JBoss EAP as a Front-end Load Balancer : https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html/configuration_guide/configuring_high_availability#configuring_jboss_eap_load_balancer
- Configuring the Web Server (Undertow) : https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html/configuration_guide/configuring_the_web_server_undertow
- JBoss EAP 7 rewrite pattern : https://access.redhat.com/solutions/2996371
- *How to use a ${} value in an undertow expression filter with CLI : https://access.redhat.com/solutions/3481401
- How to configure RequestDumping handler in EAP7?  : https://access.redhat.com/solutions/2429371
- *How to configure SSL in Undertow mod_cluster load balancer in JBoss EAP 7 : https://access.redhat.com/solutions/2847251
- *How to tune Undertow thread pool in EAP7 : https://access.redhat.com/solutions/2455451
- About Undertow Subsystem Attributes : https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html/configuration_guide/reference_material#undertow-attribute-refs
- To know the description of undertow attributes : /subsystem=undertow:read-resource-description(recursive-depth=1)
- To know the defined/default values of undertow attributes : /subsystem=undertow:read-resource(recursive-depth=1)
- Execution order of defined filters in undertow is inconsistent : https://access.redhat.com/solutions/3534811
- How to insert Response Header using Undertow configuration in JBoss EAP 7 : https://access.redhat.com/solutions/3030571
- How to suppress or change "Server" header and "X-Powered-By" response header returned by JBoss EAP 7.x : https://access.redhat.com/solutions/2740891
- How to enable TRACE logging for undertow on EAP 7.x ? : https://access.redhat.com/solutions/3327701
- Performance Tuning Guide for use with EAP 7.1 : https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html-single/performance_tuning_guide
- About XNIO : https://docs.jboss.org/author/display/XNIO/About+XNIO
- How to disable checking the request session id if it exists on other session managers in JBoss EAP 7.0.6 or later : https://access.redhat.com/solutions/3086251




<girish_a|trng> - Configuring idle connection timeout for Undertow in EAP 7 : https://access.redhat.com/solutions/3163281
<girish_a|trng>                 <gzip name="gzipfilter"/>
<girish_a|trng> <filter-ref name="gzipfilter" predicate="regex[pattern='(?:text/html,text/xml,text/css,text/javascript, application/x-javascript,application/javascript)(;.*)?', value=%{o,Content-Type}]"/>
<girish_a|trng>                     <filt
<girish_a|trng> To add  "X-XSS-Protection" header
<girish_a|trng>                 <response-header name="x-xss-protection" header-name="X-XSS-Protection" header-value="1"/>
<girish_a|trng>                     <filter-ref name="x-xss-protection"/>
<girish_a|trng> JBoss EAP 7 rewrite pattern 
<girish_a|trng> https://access.redhat.com/solutions/2996371
<girish_a|trng> To add custom class : https://access.redhat.com/solutions/2447161
<girish_a|trng> Create a new Expression Filter with the RequestDumping Handler
<girish_a|trng> Enable the Expression Filter in the Undertow Web Server
<girish_a|trng> # /subsystem=undertow/configuration=filter/expression-filter=requestDumperExpression:add(expression="dump-request")
<girish_a|trng> # /subsystem=undertow/server=default-server/host=default-host/filter-ref=requestDumperExpression:add
<girish_a|trng>      Set the mod_cluster advertise security key.
<girish_a|trng>     Adding the advertise security key allows the load balancer and servers to authenticate during discovery.
<girish_a|trng>     Use the following management CLI command to set the mod_cluster advertise security key.
<girish_a|trng>     # /profile=ha/subsystem=modcluster/mod-cluster-config=configuration:write-attribute(name=advertise-security-key, value=mypassword)
<girish_a|trng>     Update the mod_cluster load balancerâ€™s security key.
<girish_a|trng>     Use the following management CLI command to set the security key for the mod_cluster filter.
<girish_a|trng>     # /profile=load-balancer/subsystem=undertow/configuration=filter/mod-cluster=load-balancer:write-attribute(name=security-key,value=mypassword)
<girish_a|trng> ###############
<girish_a|trng> The following example shows how to configure a JBoss EAP instance to be a static load balancer. The JBoss EAP instance is located at lb.example.com and will load balance between two additional servers: server1.example.com and server2.example.com. The load balancer will reverse-proxy to the location /app and will use the AJP protocol.
<girish_a|trng>     To add a reverse proxy handler:
<girish_a|trng>     # /subsystem=undertow/configuration=handler/reverse-proxy=my-handler:add
<girish_a|trng>     To define the outbound socket bindings for each remote host:
<girish_a|trng>     # /socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=remote-host1/:add(host=server1.example.com, port=8009)
<girish_a|trng>     # /socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=remote-host2/:add(host=server2.example.com, port=8009)
<girish_a|trng>     To add each remote host to the reverse proxy handler:
<girish_a|trng>     # /subsystem=undertow/configuration=handler/reverse-proxy=my-handler/host=host1:add(outbound-socket-binding=remote-host1, scheme=ajp, instance-id=myroute1, path=/test)
<girish_a|trng>     # /subsystem=undertow/configuration=handler/reverse-proxy=my-handler/host=host2:add(outbound-socket-binding=remote-host2, scheme=ajp, instance-id=myroute2, path=/test)
<girish_a|trng>     To add the reverse proxy location:
<girish_a|trng>     # /subsystem=undertow/server=default-server/host=default-host/location=\/test:add(handler=my-handler)
<girish_a|trng> When accessing lb.example.com:8080/app, you will now see the content proxied from server1.example.com and server2.example.com. 
<girish_a|trng> NOTE : How to enable TRACE logging for undertow on EAP 7.x  : https://access.redhat.com/solutions/3327701 , this is important for debugging undertow related issues ...
<girish_a|trng> Some Important Undertow related KCS articles and Documents : http://pastebin.test.redhat.com/655565
